#!/usr/bin/python
from __future__ import print_function
import sys, getopt
from collections import defaultdict

# created 14.Oct.2014- Aaron C Daugherty
# A program to process the drug bank data, and given a certain score column, and a minimum score, it will report all drug partners

# A few subroutines to print out as I want
def warning(*objs):
    print("WARNING: ", *objs, file=sys.stderr)

def printOut(*objs):
    print(*objs, file=sys.stdout)

# Initialize a dictionary that has as a key a drug, and as a value a list of other drugs that are paired with that drug (i.e. with a score above the threshold for the given score column)
drugNames = []
drugPairs = defaultdict(lambda: defaultdict(int))

# use a loop to read each line and pull out the info I need and store the pairs in a hash of arrays
while True:
    # Get all of the splitting and stripping done
    line = sys.stdin.readline()
    line = line.rstrip()
    info = line.split("\t")

    # make sure we're not at the end
    if(len(info) < 3 ):
        break
    
    if(info[2]=="NULL"): # this is what the missing data is, but the arff file wants it as a question mark
        info[2]='?'
    
    if( info[0] not in drugNames ): # At some point or another every drug is in the first column, (the last drug is compared to itself)
        drugNames.append(info[0]) 
    
    drugPairs[ info[0] ][ info[1] ] = info[2]

# Now print everything out
# First the header info
printOut("% Title: Molecule similarity scores")
printOut("% Generated by Aaron Daugherty at 2XAR")
printOut("\n@relation molecularSimilarities\n")

# Now the attribute information (this is basically the column headers
for drugName in drugNames:
    printOut("@attribute ",drugName,"\t","numeric")

# Now the data section
printOut("\n@data")
for drugName1 in drugNames:
    rowInfo=[]
    for drugName2 in drugNames:
        if drugName2 in drugPairs[drugName1]:
            rowInfo.append(drugPairs[drugName1][drugName2])
        elif drugName1 in drugPairs[drugName2]:
            rowInfo.append(drugPairs[drugName2][drugName1])
        else:
            warning("A score for ", drugName1, " and ", drugName2, " was not found")
    rowToPrint = ",".join(rowInfo)
    printOut(rowToPrint)

sys.exit()

