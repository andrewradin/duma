# -*- coding: utf-8 -*-
# Generated by Django 1.11.24 on 2019-11-21 00:05
from __future__ import unicode_literals

from django.db import migrations
from tqdm import tqdm

import logging
logger = logging.getLogger(__name__)

def get_marking_prescreen_id(marked_because):
    import re
    # Older prescreens didn't have a '#', new ones do.
    m = re.match(r'prescreen #?([0-9]+)',marked_because)
    if not m:
        return None
    prescreen_id = int(m.group(1))
    return prescreen_id

def get_marking_prescreen(cls,marked_because):
    prescreen_id = get_marking_prescreen_id(marked_because)
    if prescreen_id is None:
        return None
    return cls.objects.get(pk=prescreen_id)

def migrate_prescreens(apps, schema_editor):
    Prescreen = apps.get_model('browse', 'Prescreen')
    WsAnnotation = apps.get_model('browse', 'WsAnnotation')
    DispositionAudit = apps.get_model('browse', 'DispositionAudit')

    logger.info("Filling in missing prescreen ids for WSAs")
    wsa_count = 0
    for wsa in tqdm(WsAnnotation.objects.filter(
                    marked_on__isnull=False,
                    )):
        pscr = get_marking_prescreen(Prescreen, wsa.marked_because)
        if wsa.marked_prescreen is None and pscr is not None:
            wsa.marked_prescreen = pscr
            wsa.save()
            wsa_count += 1

    logger.info("Updated %d WSAs", wsa_count)
    all_das = []

    da_count = 0
    logger.info("Filling in missing prescreen ids for DAs")
    for da in tqdm(DispositionAudit.objects.all()):
        pscr = get_marking_prescreen(Prescreen, da.reason)
        if da.from_prescreen is None and pscr is not None:
            da.from_prescreen = pscr
            da.save()
            da_count += 1

        all_das.append(da)

    logger.info("Updated %d DAs", da_count)

    logger.info("Inferring prescreen IDs for bulk prescreens")
    all_das.sort(key=lambda x: x.timestamp)
    recent_pscr = None
    recent_timestamp = None
    da_bulk_count = 0
    for da in all_das:
        if da.from_prescreen:
            recent_pscr = da.from_prescreen
            recent_timestamp = da.timestamp
        elif da.reason == 'bulk prescreen':
            if recent_pscr is None:
                raise Exception("How is our first thing a bulk pscr?")
            ts_delta = da.timestamp - recent_timestamp
            if ts_delta.total_seconds() < 24 * 60 * 60:
                da.from_prescreen = recent_pscr 
                da.save()
                #logger.info("Updating bulk prescreen to %d, age %.2f mins", recent_pscr.id, ts_delta.total_seconds() / 60)
                da_bulk_count += 1
            else:
                logger.warning("Can't attribute a bulk prescreen, time delta is %.2f days", ts_delta.total_seconds() / 60 / 60 / 24)
    
    logger.info("Updated %d bulk DAs", da_bulk_count)

class Migration(migrations.Migration):

    dependencies = [
        ('browse', '0146_auto_20191120_1440'),
    ]

    operations = [
            migrations.RunPython(
                migrate_prescreens,
                reverse_code=lambda *args, **kwargs: None)
    ]
